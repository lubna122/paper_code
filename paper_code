#include <WiFi.h>
#include <WebServer.h>
#include "PMS.h"
#include <MQ135.h>
#include <HardwareSerial.h>
#include <Wire.h>
#include <ThingSpeak.h>

PMS pms(Serial2);
PMS::DATA data;
  
String val1;
String val2;
String val3;
int sensorpin=A5;
float air_quality;
float rzero;


long myChannelNumber = 1601776 ;
const char myWriteAPIKey[] = "29TLRDZIZOSHU8YM";
const char* ssid = "HUAWEI";
const char* password = "12345678";
const char* server = "api.thingspeak.com"; 

WiFiClient client; 
void setup()
{
  Serial.begin(9600);
  Serial2.begin(9600);
  ThingSpeak.begin(client); 
  Serial.println("Connecting to ");
  Serial.println(ssid);
 
  //connect to your local wi-fi network
  WiFi.begin(ssid, password);
 
  //check wi-fi is connected to wi-fi network
  while (WiFi.status() != WL_CONNECTED)
  {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi connected..!");
  Serial.print("Got IP: ");
  Serial.println(WiFi.localIP());

  while(!Serial) {} // Wait

  Wire.begin();

}

void loop(){
 
if (pms.read(data))
{
   Serial.println("*****************************");
  
    Serial.println("***Air Quality Monitor***");

    Serial.println("*****************************");
  
  printPMSData(&Serial);
  delay(500);
  printMQ135Data(&Serial);
  delay(500);
  Serial.println("---------------------------");
  
  
  ThingSpeak.setField(1,val1);
  ThingSpeak.setField(2,val2);
  ThingSpeak.setField(3,val3);
  ThingSpeak.writeFields(myChannelNumber,myWriteAPIKey);
  ThingSpeak.writeField(myChannelNumber, 7, air_quality, myWriteAPIKey);
}                
}
/////////////////////////////////////////////////////////////////
void printMQ135Data(Stream*client)
{
  MQ135 gasSensor=MQ135(sensorpin);
  rzero=gasSensor.getRZero(); 
  air_quality=gasSensor.getPPM();
  Serial.print("ZeroResistance: ");
  Serial.print(rzero);
  Serial.print("\n Gas Level: ");
  Serial.print(air_quality);
  Serial.println(" PPM");
  Serial.println();
}

void printPMSData(Stream*client)
{
 
    val1 = data.PM_AE_UG_1_0;
    val2 = data.PM_AE_UG_2_5;
    val3 = data.PM_AE_UG_10_0;

    Serial.println("Dust Concentration");
 
    Serial.println("PM1.0 :" + val1 + "(ug/m3)");
 
    Serial.println("PM2.5 :" + val2 + "(ug/m3)");
 
    Serial.println("PM10  :" + val3 + "(ug/m3)");
    Serial.println();

}
    
